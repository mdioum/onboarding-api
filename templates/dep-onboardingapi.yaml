apiVersion: v1
data:
  config-kube: |

kind: ConfigMap
metadata:
  name: kubeconfig
  labels:
    app: "onboarding-api"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    fluxcd.io/automated: 'true'
  labels:
    app: onboarding-api
  name: onboarding-api
  namespace: onboarding
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: onboarding-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp:
      labels:
        app: onboarding-api
    spec:
      containers:
        - image: beopenit/onboarding-api:beopenit
          imagePullPolicy: Always
          name: onboarding-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          env:
            #- name: MAIL_SERVER
            #  value: "10.100.56.56"
            #- name: MAIL_PORT
            #  value: "25"
            #- name: MAIL_FROM
            #  value: "malaw@orange-sonatel.com"
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mail
                  key: password
            - name: MAIL_FROM
              valueFrom:
                secretKeyRef:
                  name: mail
                  key: email
            - name: MAIL_REQUEST_DESTINATION
              value: "mordioum18@gmail.com"
          volumeMounts:
            - mountPath: /home/.kube
              name: kubeconfig

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config-kube
                path: config
            name: kubeconfig
          name: kubeconfig

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: onboarding-api
  name: onboarding-api
spec:
  ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: onboarding-api
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: onboarding-api
  name: onboarding-api
spec:
  port:
    targetPort: 80-tcp
  to:
    kind: Service
    name: onboarding-api
    weight: 100
  wildcardPolicy: None
